name: Build and Transport PDFs

on:
  pull_request:
    types:
      - closed
    branches:
      - develop

jobs:
  build:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest

    steps:
      # Checkout code
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          persist-credentials: true

      # Install TeX Live and required packages
      - name: Install TeX Live with Italian support
        run: |
          sudo apt-get update
          sudo apt-get install -y texlive texlive-latex-extra texlive-fonts-recommended texlive-lang-italian

      # Install Inkscape
      - name: Install Inkscape
        run: |
          sudo apt-get install -y inkscape

      # Process all LaTeX projects
      - name: Process all LaTeX projects
        run: |
          base_dir="src/2 - RTB"
          output_dir="PDF/2 - RTB"
          mkdir -p "$output_dir"

          # Function to process a LaTeX project
          process_latex_project() {
            project_dir="$1"
            relative_path=$(realpath --relative-to="$base_dir" "$project_dir")
            output_path="$output_dir/$relative_path"
            mkdir -p "$output_path"
            cd "$project_dir"

            # Convert SVGs to PDFs
            if [ -d "images" ]; then
              for svg_file in images/*.svg; do
                [ -e "$svg_file" ] || continue
                pdf_file="${svg_file%.svg}.pdf"
                inkscape "$svg_file" --export-filename="$pdf_file"
              done
            fi

            # Find and compile the main LaTeX file
            main_tex=$(find . -maxdepth 1 -type f -name "*.tex" | head -n 1)
            if [ -n "$main_tex" ]; then
              pdflatex -shell-escape -interaction=nonstopmode -file-line-error "$main_tex"
              pdflatex -shell-escape -interaction=nonstopmode -file-line-error "$main_tex"

              # Move the generated PDF to the output directory
              pdf_name=$(basename "$main_tex" .tex).pdf
              mv "$pdf_name" "$GITHUB_WORKSPACE/$output_path/"
            fi

            cd "$GITHUB_WORKSPACE"
          }

          # Process Verbali (Interni, Esterni)
          for type in "Interni" "Esterni"; do
            for sub_dir in "$base_dir/Verbali/$type"/*; do
              [ -d "$sub_dir" ] && process_latex_project "$sub_dir"
            done
          done

      # Commit PDFs to develop
      - name: Commit PDFs to develop
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add PDF/
          git commit -m "Add latest PDFs to develop"
          git push origin develop
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  transport_to_main:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    needs: build
  
    steps:
      # Checkout del branch main
      - name: Checkout main branch
        uses: actions/checkout@v3
        with:
          ref: main
          persist-credentials: true
      
      - name: Transfer PDFs to main branch
        run: |
          echo "Trasferimento dei file PDF nel branch main..."
          mkdir -p "./2 - RTB" # Assicura che la directory di destinazione esista
          mv PDF/* "./2 - RTB/" # Sposta tutto il contenuto di PDF nella cartella 2 - RTB
          echo "File trasferiti:"
          ls -R "./2 - RTB/"
      
      - name: Commit and push PDFs to main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add "./2 - RTB/"
          git commit -m "Transfer PDFs from develop to main"
          git push origin main
      
