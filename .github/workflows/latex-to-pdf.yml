name: Build and Transport PDFs

on:
  pull_request:
    types:
      - closed
    branches:
      - develop

jobs:
  build:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest

    steps:
      # Checkout code
      - name: Checkout code
        uses: actions/checkout@v3

      # Clean TeX Live cache and configurations
      - name: Clean TeX Live cache
        run: |
          sudo rm -rf /root/texmf /root/.texlive* /root/.cache/texlive

      # Install TeX Live and required packages
      - name: Install TeX Live and packages
        run: |
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends \
            texlive-base texlive-latex-extra texlive-fonts-recommended \
            texlive-lang-italian lmodern ghostscript inkscape

      # Process LaTeX projects and generate PDFs
      - name: Process LaTeX projects
        run: |
          base_dir="src/2 - RTB"
          output_dir="PDF/2 - RTB"
          mkdir -p "$output_dir"

          process_latex_project() {
            project_dir="$1"
            relative_path=$(realpath --relative-to="$base_dir" "$project_dir")
            output_path="$output_dir/$relative_path"
            mkdir -p "$output_path"
            cd "$project_dir"

            if [ -d "images" ]; then
              for svg_file in images/*.svg; do
                [ -e "$svg_file" ] || continue
                pdf_file="${svg_file%.svg}.pdf"
                inkscape "$svg_file" --export-filename="$pdf_file"
              done
            fi

            main_tex=$(find . -maxdepth 1 -type f -name "*.tex" | head -n 1)
            if [ -n "$main_tex" ]; then
              pdflatex -shell-escape -interaction=nonstopmode -file-line-error "$main_tex"
              pdflatex -shell-escape -interaction=nonstopmode -file-line-error "$main_tex"

              pdf_name=$(basename "$main_tex" .tex).pdf
              final_output_path="$output_dir/$(dirname "$relative_path")"
              mkdir -p "$final_output_path"
              mv "$pdf_name" "$GITHUB_WORKSPACE/$final_output_path/$(basename "$project_dir").pdf"
            fi

            cd "$GITHUB_WORKSPACE"
          }

          for type in "Interni" "Esterni"; do
            for sub_dir in "$base_dir/Verbali/$type"/*; do
              [ -d "$sub_dir" ] && process_latex_project "$sub_dir"
            done
          done

      # Upload PDFs as artifact
      - name: Upload PDFs as artifact
        uses: actions/upload-artifact@v3
        with:
          name: pdf-artifact
          path: PDF/
