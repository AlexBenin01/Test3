name: Build Latest PDF

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Checkout code
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          persist-credentials: true

      # Install TeX Live and required packages
      - name: Install TeX Live with Italian support
        run: |
          sudo apt-get update
          sudo apt-get install -y texlive texlive-latex-extra texlive-fonts-recommended texlive-lang-italian

      # Install Inkscape
      - name: Install Inkscape
        run: |
          sudo apt-get install -y inkscape

      # Find latest modified .tex file and its folder
      - name: Find latest .tex file
        id: find_latest_tex
        run: |
          # Cerca il file .tex più recente
          latest_tex=$(find "src/2 - RTB" -type f -name "*.tex" \
            -exec stat --format='%Y %n' "{}" \; | \
            sort -nr | awk 'NR==1 {print $2}')

          # Controlla se il file è stato trovato
          if [ -z "$latest_tex" ]; then
            echo "Error: No .tex file found in src/2 - RTB"
            exit 1
          fi

          # Risali alla directory principale del progetto
          latest_folder=$(dirname "$latest_tex")
          while [[ "$latest_folder" == *"/images"* ]] || [[ "$latest_folder" == *"/contents"* ]]; do
            latest_folder=$(dirname "$latest_folder")
          done

          echo "Main TeX file: $latest_tex"
          echo "Latest folder: $latest_folder"
          echo "LATEST_FOLDER=$latest_folder" >> $GITHUB_ENV
          echo "MAIN_TEX=$latest_tex" >> $GITHUB_ENV

      # Convert SVG to PDF
      - name: Convert SVG to PDF
        run: |
          if [ -d "${{ env.LATEST_FOLDER }}/images" ]; then
            for svg_file in "${{ env.LATEST_FOLDER }}/images/"*.svg; do
              [ -e "$svg_file" ] || continue  # Skip if no SVG files exist
              pdf_file="${svg_file%.svg}.pdf"
              inkscape "$svg_file" --export-filename="$pdf_file"
            done
          fi

      # Compile LaTeX to PDF
      - name: Compile LaTeX to PDF
        run: |
          cd "${{ env.LATEST_FOLDER }}"
          pdflatex -shell-escape -interaction=nonstopmode -file-line-error "$(basename "${{ env.MAIN_TEX }}")"
          pdflatex -shell-escape -interaction=nonstopmode -file-line-error "$(basename "${{ env.MAIN_TEX }}")"

      # Create PDF folder structure and move the file there
      - name: Create PDF folder structure and move PDF
        run: |
          pdf_output_dir="PDF/${{ env.LATEST_FOLDER }}"
          mkdir -p "$pdf_output_dir"
          mv "${{ env.LATEST_FOLDER }}"/*.pdf "$pdf_output_dir/"

      # Commit and push PDF to main
      - name: Commit and push PDF to main
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add PDF/
          git commit -m "Add latest PDF output to main"
          git push origin main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Upload PDF as artifact
      - name: Upload PDF as artifact
        uses: actions/upload-artifact@v4
        with:
          name: pdf
          path: PDF/${{ env.LATEST_FOLDER }}/*.pdf
